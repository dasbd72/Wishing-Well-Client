{"version":3,"sources":["webpack:///../node_modules/@aws-amplify/ui-components/dist/esm-es5/amplify-federated-sign-in.entry.js","webpack:///../node_modules/@aws-amplify/ui-components/dist/esm-es5/auth-types-78df304e.js","webpack:///../node_modules/@aws-amplify/ui-components/dist/esm-es5/constants-d1abe7de.js"],"names":["logger","AmplifyFederatedSignIn","hostRef","r","this","authState","A","federated","prototype","componentWillLoad","Error","N","_a","oauth","oauth_config","Object","assign","auth0","render","values","includes","debug","h","AuthState","MfaOption","ChallengeName","AuthFormField","UsernameAlias","USERNAME_SUFFIX","EMAIL_SUFFIX","CODE_SUFFIX","PHONE_SUFFIX","PASSWORD_SUFFIX","COUNTRY_DIAL_CODE_SUFFIX","COUNTRY_DIAL_CODE_DEFAULT","AUTH_SOURCE_KEY","REDIRECTED_FROM_HOSTED_UI","AUTHENTICATOR_AUTHSTATE","PHONE_EMPTY_ERROR_MESSAGE","NO_AUTH_MODULE_FOUND","NO_STORAGE_MODULE_FOUND","NO_INTERACTIONS_MODULE_FOUND","SETUP_TOTP","USER_NOT_SETUP_SOFTWARE_TOKEN_MFA","USER_NOT_VERIFIED_SOFTWARE_TOKEN_MFA","SUCCESS","AUTH_CHANNEL","UI_AUTH_CHANNEL","TOAST_AUTH_ERROR_EVENT","AUTH_STATE_CHANGE_EVENT"],"mappings":"+LAKIA,EAAS,IAAI,IAAc,6BAC3BC,EAAwC,WACxC,SAASA,EAAuBC,IAC5B,IAAAC,GAAiBC,KAAMF,GAEvBE,KAAKC,UAAY,EAAAC,EAAA,OAEjBF,KAAKG,UAAY,GA8BrB,OA5BAN,EAAuBO,UAAUC,kBAAoB,WACjD,IAAK,KAAkC,mBAAnB,cAChB,MAAM,IAAIC,MAAM,EAAAC,GAEpB,IAAIC,EAAK,gBAAiBC,MAAOA,OAAe,IAAPD,EAAgB,GAAKA,EAE1DC,EAAc,OACdT,KAAKG,UAAUO,aAAeC,OAAOC,OAAOD,OAAOC,OAAO,GAAIZ,KAAKG,UAAUO,cAAeD,GAEvFA,EAAkB,aACvBT,KAAKG,UAAUO,aAAeC,OAAOC,OAAOD,OAAOC,OAAO,GAAIZ,KAAKG,UAAUO,cAAeD,EAAkB,aAE9GA,EAAa,QACbT,KAAKG,UAAUU,MAAQF,OAAOC,OAAOD,OAAOC,OAAO,GAAIZ,KAAKG,UAAUU,OAAQJ,EAAa,SAGnGZ,EAAuBO,UAAUU,OAAS,WACtC,OAAKd,KAAKG,UAKLQ,OAAOI,OAAO,EAAAb,GAAWc,SAAShB,KAAKC,YAG5CL,EAAOqB,MAAM,sBAAuBjB,KAAKG,YACjC,IAAAe,GAAE,uBAAwB,CAAE,YAAa,8BAA+B,IAAAA,GAAE,kBAAmB,CAAE,YAAa,mCAAoC,IAAAA,GAAE,4BAA6B,CAAEjB,UAAWD,KAAKC,UAAW,YAAa,4BAA6BE,UAAWH,KAAKG,eAHnQ,MALPP,EAAOqB,MAAM,yCACbrB,EAAOqB,MAAM,uEACN,OAQRpB,EApCgC,I,6BCL3C,IAAIsB,EAqBAC,EAMAC,EAQAC,EAIAC,E,iDAtCJ,SAAWJ,GACPA,EAAkB,OAAI,SACtBA,EAAmB,QAAI,UACvBA,EAAkB,OAAI,SACtBA,EAAmB,QAAI,UACvBA,EAAqB,UAAI,YACzBA,EAAoB,SAAI,WACxBA,EAAqB,UAAI,YACzBA,EAAyB,cAAI,gBAC7BA,EAAsC,2BAAI,0BAC1CA,EAAyB,cAAI,gBAC7BA,EAAsC,2BAAI,6BAC1CA,EAA+B,oBAAI,sBACnCA,EAA0B,eAAI,iBAC9BA,EAAyB,cAAI,oBAC7BA,EAAsB,WAAI,aAC1BA,EAAqB,UAAI,YACzBA,EAA+B,oBAAI,sBACnCA,EAAyB,cAAI,gBAlBjC,CAmBGA,IAAcA,EAAY,KAE7B,SAAWC,GACPA,EAAgB,KAAI,OACpBA,EAAe,IAAI,MACnBA,EAAiB,MAAI,QAHzB,CAIGA,IAAcA,EAAY,KAE7B,SAAWC,GACPA,EAAgC,iBAAI,qBACpCA,EAAsB,OAAI,UAC1BA,EAAmC,oBAAI,wBACvCA,EAAwB,SAAI,YAC5BA,EAA+B,gBAAI,mBALvC,CAMGA,IAAkBA,EAAgB,KAErC,SAAWC,GACPA,EAAwB,SAAI,WADhC,CAEGA,IAAkBA,EAAgB,KAErC,SAAWC,GACPA,EAAwB,SAAI,WAC5BA,EAAqB,MAAI,QACzBA,EAA4B,aAAI,eAHpC,CAIGA,IAAkBA,EAAgB,M,sNC3CrC,IAAIC,EAAkB,WAClBC,EAAe,QACfC,EAAc,OACdC,EAAe,QACfC,EAAkB,WAElBC,EAA2B,2BAC3BC,EAA4B,KAE5BC,EAAkB,sBAClBC,EAA4B,oCAC5BC,EAA0B,kCAE1BC,EAA4B,gCAC5BC,EAAuB,oEACvBC,EAA0B,0EAC1BC,EAA+B,oFAE/BC,EAAa,aAEbC,EAAoC,yCACpCC,EAAuC,2CAEvCC,EAAU,UAEVC,EAAe,OACfC,EAAkB,UAClBC,EAAyB,iBACzBC,EAA0B","file":"683.bundle.js","sourcesContent":["import { r as registerInstance, h } from './index-83f2275b.js';\nimport { ConsoleLogger } from '@aws-amplify/core';\nimport { A as AuthState } from './auth-types-78df304e.js';\nimport { Auth } from '@aws-amplify/auth';\nimport { N as NO_AUTH_MODULE_FOUND } from './constants-d1abe7de.js';\nvar logger = new ConsoleLogger('amplify-federated-sign-in');\nvar AmplifyFederatedSignIn = /** @class */ (function () {\n    function AmplifyFederatedSignIn(hostRef) {\n        registerInstance(this, hostRef);\n        /** The current authentication state. */\n        this.authState = AuthState.SignIn;\n        /** Federated credentials & configuration. */\n        this.federated = {};\n    }\n    AmplifyFederatedSignIn.prototype.componentWillLoad = function () {\n        if (!Auth || typeof Auth.configure !== 'function') {\n            throw new Error(NO_AUTH_MODULE_FOUND);\n        }\n        var _a = Auth.configure().oauth, oauth = _a === void 0 ? {} : _a;\n        // backward compatibility\n        if (oauth['domain']) {\n            this.federated.oauth_config = Object.assign(Object.assign({}, this.federated.oauth_config), oauth);\n        }\n        else if (oauth['awsCognito']) {\n            this.federated.oauth_config = Object.assign(Object.assign({}, this.federated.oauth_config), oauth['awsCognito']);\n        }\n        if (oauth['auth0']) {\n            this.federated.auth0 = Object.assign(Object.assign({}, this.federated.auth0), oauth['auth0']);\n        }\n    };\n    AmplifyFederatedSignIn.prototype.render = function () {\n        if (!this.federated) {\n            logger.debug('federated prop is empty. show nothing');\n            logger.debug('federated={google_client_id: , facebook_app_id: , amazon_client_id}');\n            return null;\n        }\n        if (!Object.values(AuthState).includes(this.authState)) {\n            return null;\n        }\n        logger.debug('federated Config is', this.federated);\n        return (h(\"amplify-form-section\", { \"data-test\": \"federated-sign-in-section\" }, h(\"amplify-section\", { \"data-test\": \"federated-sign-in-body-section\" }, h(\"amplify-federated-buttons\", { authState: this.authState, \"data-test\": \"federated-sign-in-buttons\", federated: this.federated }))));\n    };\n    return AmplifyFederatedSignIn;\n}());\nexport { AmplifyFederatedSignIn as amplify_federated_sign_in };\n","// TODO: Move these values to or extract them from the Cognito Provider in the Auth category for Auth V2\nvar AuthState;\n(function (AuthState) {\n    AuthState[\"SignUp\"] = \"signup\";\n    AuthState[\"SignOut\"] = \"signout\";\n    AuthState[\"SignIn\"] = \"signin\";\n    AuthState[\"Loading\"] = \"loading\";\n    AuthState[\"SignedOut\"] = \"signedout\";\n    AuthState[\"SignedIn\"] = \"signedin\";\n    AuthState[\"SigningUp\"] = \"signingup\";\n    AuthState[\"ConfirmSignUp\"] = \"confirmSignUp\";\n    AuthState[\"confirmingSignUpCustomFlow\"] = \"confirmsignupcustomflow\";\n    AuthState[\"ConfirmSignIn\"] = \"confirmSignIn\";\n    AuthState[\"confirmingSignInCustomFlow\"] = \"confirmingsignincustomflow\";\n    AuthState[\"VerifyingAttributes\"] = \"verifyingattributes\";\n    AuthState[\"ForgotPassword\"] = \"forgotpassword\";\n    AuthState[\"ResetPassword\"] = \"resettingpassword\";\n    AuthState[\"SettingMFA\"] = \"settingMFA\";\n    AuthState[\"TOTPSetup\"] = \"TOTPSetup\";\n    AuthState[\"CustomConfirmSignIn\"] = \"customConfirmSignIn\";\n    AuthState[\"VerifyContact\"] = \"verifyContact\";\n})(AuthState || (AuthState = {}));\nvar MfaOption;\n(function (MfaOption) {\n    MfaOption[\"TOTP\"] = \"TOTP\";\n    MfaOption[\"SMS\"] = \"SMS\";\n    MfaOption[\"NOMFA\"] = \"NOMFA\";\n})(MfaOption || (MfaOption = {}));\nvar ChallengeName;\n(function (ChallengeName) {\n    ChallengeName[\"SoftwareTokenMFA\"] = \"SOFTWARE_TOKEN_MFA\";\n    ChallengeName[\"SMSMFA\"] = \"SMS_MFA\";\n    ChallengeName[\"NewPasswordRequired\"] = \"NEW_PASSWORD_REQUIRED\";\n    ChallengeName[\"MFASetup\"] = \"MFA_SETUP\";\n    ChallengeName[\"CustomChallenge\"] = \"CUSTOM_CHALLENGE\";\n})(ChallengeName || (ChallengeName = {}));\nvar AuthFormField;\n(function (AuthFormField) {\n    AuthFormField[\"Password\"] = \"password\";\n})(AuthFormField || (AuthFormField = {}));\nvar UsernameAlias;\n(function (UsernameAlias) {\n    UsernameAlias[\"username\"] = \"username\";\n    UsernameAlias[\"email\"] = \"email\";\n    UsernameAlias[\"phone_number\"] = \"phone_number\";\n})(UsernameAlias || (UsernameAlias = {}));\nexport { AuthState as A, ChallengeName as C, MfaOption as M, UsernameAlias as U, AuthFormField as a };\n","// Dictionaries\n// fieldId constants\nvar USERNAME_SUFFIX = 'username';\nvar EMAIL_SUFFIX = 'email';\nvar CODE_SUFFIX = 'code';\nvar PHONE_SUFFIX = 'phone';\nvar PASSWORD_SUFFIX = 'password';\n// Country Dial Code common constants\nvar COUNTRY_DIAL_CODE_SUFFIX = 'country-dial-code-select';\nvar COUNTRY_DIAL_CODE_DEFAULT = '+1';\n// Auth Keys\nvar AUTH_SOURCE_KEY = 'amplify-auth-source';\nvar REDIRECTED_FROM_HOSTED_UI = 'amplify-redirected-from-hosted-ui';\nvar AUTHENTICATOR_AUTHSTATE = 'amplify-authenticator-authState';\n// Error message Common Constants\nvar PHONE_EMPTY_ERROR_MESSAGE = 'Phone number can not be empty';\nvar NO_AUTH_MODULE_FOUND = 'No Auth module found, please ensure @aws-amplify/auth is imported';\nvar NO_STORAGE_MODULE_FOUND = 'No Storage module found, please ensure @aws-amplify/storage is imported';\nvar NO_INTERACTIONS_MODULE_FOUND = 'No Interactions module found, please ensure @aws-amplify/interactions is imported';\n// TOTP Messages\nvar SETUP_TOTP = 'SETUP_TOTP';\n// Select MFA Types Messages\nvar USER_NOT_SETUP_SOFTWARE_TOKEN_MFA = 'User has not set up software token mfa';\nvar USER_NOT_VERIFIED_SOFTWARE_TOKEN_MFA = 'User has not verified software token mfa';\n// Common events\nvar SUCCESS = 'SUCCESS';\n// Hub Events and Channels\nvar AUTH_CHANNEL = 'auth';\nvar UI_AUTH_CHANNEL = 'UI Auth';\nvar TOAST_AUTH_ERROR_EVENT = 'ToastAuthError';\nvar AUTH_STATE_CHANGE_EVENT = 'AuthStateChange';\nexport { AUTH_CHANNEL as A, COUNTRY_DIAL_CODE_SUFFIX as C, EMAIL_SUFFIX as E, NO_AUTH_MODULE_FOUND as N, PHONE_EMPTY_ERROR_MESSAGE as P, REDIRECTED_FROM_HOSTED_UI as R, SETUP_TOTP as S, TOAST_AUTH_ERROR_EVENT as T, UI_AUTH_CHANNEL as U, AUTH_STATE_CHANGE_EVENT as a, PHONE_SUFFIX as b, AUTHENTICATOR_AUTHSTATE as c, NO_INTERACTIONS_MODULE_FOUND as d, NO_STORAGE_MODULE_FOUND as e, USER_NOT_SETUP_SOFTWARE_TOKEN_MFA as f, USER_NOT_VERIFIED_SOFTWARE_TOKEN_MFA as g, COUNTRY_DIAL_CODE_DEFAULT as h, SUCCESS as i, AUTH_SOURCE_KEY as j, CODE_SUFFIX as k, PASSWORD_SUFFIX as l, USERNAME_SUFFIX as m };\n"],"sourceRoot":""}